---
- name: Deploy drone server & docker runners
  become: true
  hosts: master
  tags: [master]
  tasks:
    - name: Include drone secrets
      include_vars: drone-secrets.yml

    - name: Start drone server
      docker_container:
        name: drone
        image: drone/drone:2
        restart_policy: unless-stopped
        volumes:
          - /var/lib/drone:/data
          - /etc/timezone:/etc/timezone
        ports:
          - '80:80'
          - '443:443'
        env:
          DRONE_GITHUB_CLIENT_ID: '{{ client_id }}'
          DRONE_GITHUB_CLIENT_SECRET: '{{ client_secret }}'
          DRONE_RPC_SECRET: '{{ shared_secret }}'
          DRONE_ORGS: 'mekstack' # Limit users who can access instance
          DRONE_SERVER_HOST: 'lb.cloud.miem.hse.ru'
          DRONE_SERVER_PROTO: 'https'
          DRONE_USER_FILTER: 'mmskv,TheHussky'
          DRONE_USER_CREATE: 'username:mmskv,admin:true'

    - name: Start drone runner
      docker_container:
        name: runner1
        image: drone/drone-runner-docker:1
        restart_policy: unless-stopped
        network_mode: container:drone
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /etc/timezone:/etc/timezone
        env:
          DRONE_RPC_SECRET: '{{ shared_secret }}'
          DRONE_RPC_HOST: 'master.drone.corp'
          DRONE_RPC_PROTO: 'http'
          DRONE_RUNNER_CAPACITY: '4'
          DRONE_RUNNER_NAME: 'runner1'

    - name: Wait for runner-docker to start
      shell: docker logs runner1 -n 3
      register: runner
      retries: 10
      delay: 2
      until: "'successfully pinged the remote server' in runner.stderr"

- name: Install drone exec runners
  become: true
  hosts: exec
  tags: [exec]
  tasks:
    - name: Include drone secrets
      include_vars: drone-secrets.yml

    - name: Update repositories
      community.general.pacman:
        update_cache: true

    - name: Install drone-runner-exec
      community.general.pacman:
        name: drone-runner-exec

    - name: Install git
      community.general.pacman:
        name: git

    - name: Ensure /etc/drone-runner-exec exists
      file:
        path: /etc/drone-runner-exec/
        state: directory
        owner: 1000
        group: 1000
        mode: 0700

    - name: Ensure /var/log/drone-runner-exec exists
      file:
        path: /var/log/drone-runner-exec/
        state: directory
        owner: 1000
        group: 1000
        mode: 0700

    - name: Ensure /opt/drone-runner-exec exists
      file:
        path: /var/log/drone-runner-exec/
        state: directory
        owner: 1000
        group: 1000
        mode: 0700

    - name: Configure drone exec runner
      copy:
        dest: '/etc/drone-runner-exec/config'
        content: |
          DRONE_RPC_PROTO=http
          TMPDIR=/opt/drone-runner-exec
          DRONE_RPC_HOST=master.drone.corp
          DRONE_RPC_SECRET={{ shared_secret }}
          DRONE_LOG_FILE=/var/log/drone-runner-exec/exec.log

    - name: Create unit file for drone-runner-exec.service
      template:
        src: drone-runner-exec.service
        dest: /etc/systemd/system/drone-runner-exec.service
        mode: 644

    - name: Restart drone-runner-exec.service
      service:
        name: drone-runner-exec
        daemon_reload: true
        enabled: true
        state: restarted

    - name: Wait for runner-exec to start
      shell: journalctl -u drone-runner-exec | tail -n 3
      register: exec
      retries: 10
      delay: 2
      until: "'successfully pinged the remote server' in exec.stdout"
