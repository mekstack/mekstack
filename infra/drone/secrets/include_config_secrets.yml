---

- name: Create clouds dict
  delegate_to: 127.0.0.1
  set_fact:
    # This statement consisnts of very simple parts and is poorely readable only due to ansible syntax
    # 1) dict|default({}) - inits an empty dict
    # 2) dict | combine( {key : value} ) - adds a key:value pair to dict
    # 3) value = dict.get( cloud_name.split(..) ) - assignes clouds.yaml part (cloud_name cloud) to value (type dict) 
    # 4) dict | community.general.dict_kv( str ) - inits a new dict following the schema {str:dict}
    # 5) dict | to_nice_yaml - makes yaml file out of dict
    # The result is {cloud_name_clouds : valid clouds.yaml} (clouds.yaml consists of only cloud_name cloud named openstack) 

    cloud_dict: "{{ cloud_dict|default({}) | combine( {item : ( cloud_file_parts.get(item.split('_')[0]) | community.general.dict_kv('openstack') | community.general.dict_kv('clouds') ) | to_nice_yaml }) }}"

  with_items: "{{ clouds }}"
  vars:
#   This creates a {clouds: : dict_of_clouds} dict out of clouds.yaml file on control plane
    cloud_file_parts: "{{ ( lookup('ansible.builtin.file', '~/.config/openstack/clouds.yaml') | from_yaml ).get('clouds') }}"
    clouds:
      - mekstack_clouds
      - docs_clouds
      - drone_clouds
 
- name: Write clouds to vault
  delegate_to: 127.0.0.1
  community.hashi_vault.vault_write:
    path: "kv/data/drone_clouds"
    data: 
      data: "{{ cloud_dict }}"

- name: Include non-cloud secrets
  set_fact:
     "{{ item }}": "{{ lookup('hashi_vault', 'secret=kv/data/drone:{{ item }}') }}"
  with_items: "{{ non_cloud_secrets }}"
  vars:
    non_cloud_secrets:
      - client_id
      - client_secret
      - shared_secret
      - docs_key
      - zulip_token
      - docs_gitlab_deploy_key
      - arch_boxes_gitlab_deploy_key
      - accounts_yaml
 
- name: Include non-cloud secrets
  set_fact:
     "{{ item }}": "{{ lookup('hashi_vault', 'secret=kv/data/drone_clouds:{{ item }}') }}"
  with_items: "{{ cloud_secrets }}"
  vars:
    cloud_secrets:
      - mekstack_clouds
      - docs_clouds
      - drone_clouds
